{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/zulie/Desktop/zulie/practice/practice/src/pages/Grid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { atom, useRecoilState } from 'recoil';\nconst Wrapper = styled.section`\n    width: 100%;\n    max-width: 1680px;\n\n    .button {\n        margin: 50px 70px;\n        display: none;\n    }\n`;\n_c = Wrapper;\nconst List = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    row-gap: 10px;\n\n    .productContent {\n        display: flex;\n        justify-content: center;\n    }\n    .product {\n        width:400px;\n        height: 400px;\n        margin: 10px;\n    }\n`;\n_c2 = List;\nconst OutsideBox = styled.div`\n    border: 2px solid #dfdfdf;\n    border-radius: 10px;\n    margin: 40px 70px 10px;\n    /* color: linear-gradient(to right, #4364f7, #23d5ab); */\n`;\n_c3 = OutsideBox;\nconst InsideBox = styled.div`\n    border: 1px solid #dfdfdf;\n    padding: 5px 0;\n    \n    .arrNum {\n        font-size: 30px;\n        color: #4c4c4c;\n        margin: 10px 20px;\n        border: 2px solid #c5c5c5; \n        border-radius: 5px;\n        padding: 0 10px;\n    }\n`;\n_c4 = InsideBox;\nconst Button = styled.div`\n        margin: 30px 70px;\n        font-size: 18px;\n\n    .input-file-button {\n        padding: 6px 25px;\n        background-color: #0358ff;\n        border-radius: 4px;\n        color: white;\n        \n        &:hover {\n            cursor: pointer;\n        }\n    }\n`;\n_c5 = Button;\nconst state = atom({\n  key: 'grid',\n  default: []\n});\n\nconst Grid = () => {\n  _s();\n\n  const [imageList, setImageList] = useRecoilState(state);\n\n  const onFileChange = e => {\n    const {\n      target: {\n        files\n      }\n    } = e;\n    const theFile = files[0];\n    console.log(theFile);\n    const reader = new FileReader(); //객체를 이용해 컴퓨터에 저장하는 것을 가능하게\n\n    reader.readAsDataURL(theFile); //읽을 객체\n\n    reader.onloadend = finishedEvent => {\n      //읽기 동작이 성공적으로 완료 되었을 때 발생\n      const {\n        currentTarget: {\n          result\n        }\n      } = finishedEvent;\n      setImageList(imageList => [...imageList, {\n        src: result,\n        id: imageList.length\n      }]);\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(OutsideBox, {\n      children: /*#__PURE__*/_jsxDEV(InsideBox, {\n        children: imageList.map(image => {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"arrNum\",\n            children: image.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-file-button\",\n        for: \"input-file\",\n        children: \"\\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"button\",\n        id: \"input-file\",\n        type: \"file\",\n        onChange: onFileChange,\n        multiple: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: imageList.map(image => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"productContent\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"product\",\n            src: image.src\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Grid, \"CMDnigB18yOXQvnM8mxKEJRk/sw=\", false, function () {\n  return [useRecoilState];\n});\n\n_c6 = Grid;\nexport default Grid;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"List\");\n$RefreshReg$(_c3, \"OutsideBox\");\n$RefreshReg$(_c4, \"InsideBox\");\n$RefreshReg$(_c5, \"Button\");\n$RefreshReg$(_c6, \"Grid\");","map":{"version":3,"sources":["/Users/zulie/Desktop/zulie/practice/practice/src/pages/Grid.js"],"names":["React","useEffect","useState","styled","atom","useRecoilState","Wrapper","section","List","div","OutsideBox","InsideBox","Button","state","key","default","Grid","imageList","setImageList","onFileChange","e","target","files","theFile","console","log","reader","FileReader","readAsDataURL","onloadend","finishedEvent","currentTarget","result","src","id","length","map","image"],"mappings":"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","sourcesContent":["import React ,{ useEffect, useState} from 'react';\nimport styled from 'styled-components';\nimport { atom, useRecoilState } from 'recoil';\n\n\nconst Wrapper = styled.section`\n    width: 100%;\n    max-width: 1680px;\n\n    .button {\n        margin: 50px 70px;\n        display: none;\n    }\n`;\n\n\nconst List = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    row-gap: 10px;\n\n    .productContent {\n        display: flex;\n        justify-content: center;\n    }\n    .product {\n        width:400px;\n        height: 400px;\n        margin: 10px;\n    }\n`;\n\nconst OutsideBox = styled.div`\n    border: 2px solid #dfdfdf;\n    border-radius: 10px;\n    margin: 40px 70px 10px;\n    /* color: linear-gradient(to right, #4364f7, #23d5ab); */\n`;\n\nconst InsideBox = styled.div`\n    border: 1px solid #dfdfdf;\n    padding: 5px 0;\n    \n    .arrNum {\n        font-size: 30px;\n        color: #4c4c4c;\n        margin: 10px 20px;\n        border: 2px solid #c5c5c5; \n        border-radius: 5px;\n        padding: 0 10px;\n    }\n`;\n\nconst Button = styled.div`\n        margin: 30px 70px;\n        font-size: 18px;\n\n    .input-file-button {\n        padding: 6px 25px;\n        background-color: #0358ff;\n        border-radius: 4px;\n        color: white;\n        \n        &:hover {\n            cursor: pointer;\n        }\n    }\n`;\n\nconst state = atom({\n    key: 'grid',\n    default: [],\n});\n\nconst Grid = () => {\n\n    const [imageList, setImageList] = useRecoilState(state);\n\n    \n\n    const onFileChange = (e) => {\n    const { target : {files} } = e;\n        const theFile = files[0];\n        console.log(theFile);\n        const reader = new FileReader(); //객체를 이용해 컴퓨터에 저장하는 것을 가능하게\n        reader.readAsDataURL(theFile); //읽을 객체\n        reader.onloadend = (finishedEvent) =>{ //읽기 동작이 성공적으로 완료 되었을 때 발생\n            const { currentTarget: { result } } = finishedEvent;\n            \n            setImageList((imageList) => [...imageList, {src: result , id: imageList.length}]);\n        }\n    }\n\n    return(\n        <Wrapper>\n            <OutsideBox>\n                <InsideBox>\n                    {imageList.map((image) => {\n                        return (\n                            <span className=\"arrNum\">{image.id}</span>\n                        );\n                    })}\n                </InsideBox>\n            </OutsideBox>\n                <Button>\n                    <label className='input-file-button' for='input-file'>업로드</label>\n                    <input className='button' id='input-file' type='file' onChange={onFileChange} multiple/> \n                </Button>\n                <List> \n                {imageList.map((image) => {\n                    return (\n                        <div className=\"productContent\">\n                            <img className='product' src={image.src} />\n                        </div>\n                    );\n                })}\n                </List>\n            </Wrapper>\n    );\n};\n\nexport default Grid;  "]},"metadata":{},"sourceType":"module"}