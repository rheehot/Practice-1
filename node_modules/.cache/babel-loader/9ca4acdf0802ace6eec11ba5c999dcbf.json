{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/zulie/Desktop/zulie/practice/practice/src/pages/Array.js\";\nimport React from ' react';\nimport { atom, useRecoilState } from 'recoil';\n\nfunction Array() {\n  const state = atom({\n    key: 'grid',\n    default: []\n  });\n\n  const onFileChange = e => {\n    const {\n      target: {\n        files\n      }\n    } = e;\n    const theFile = files[0];\n    const reader = new FileReader(); //객체를 이용해 컴퓨터에 저장하는 것을 가능하게\n\n    reader.readAsDataURL(theFile); //읽을 객체\n\n    reader.onloadend = finishedEvent => {\n      //읽기 동작이 성공적으로 완료 되었을 때 발생\n      const {\n        currentTarget: {\n          result\n        }\n      } = finishedEvent;\n      setImageList(imageList => [...imageList, {\n        src: result,\n        id: imageList.length,\n        theFile\n      }]);\n    };\n  };\n\n  const removeItems = () => {\n    setImageList(imageList.filter(imageList => imageList.id !== imageList.id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(InsideBox, {\n      id: id,\n      src: src,\n      children: imageList.map(image => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"arrNum\",\n          onClick: () => removeItems(imageList.id),\n          children: `${image.id} - ${image.theFile.name}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      removeItems: removeItems,\n      imageList: imageList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Array;\nexport default Array;\n\nvar _c;\n\n$RefreshReg$(_c, \"Array\");","map":{"version":3,"sources":["/Users/zulie/Desktop/zulie/practice/practice/src/pages/Array.js"],"names":["React","atom","useRecoilState","Array","state","key","default","onFileChange","e","target","files","theFile","reader","FileReader","readAsDataURL","onloadend","finishedEvent","currentTarget","result","setImageList","imageList","src","id","length","removeItems","filter","map","image","name"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,QAAlB;AACA,SAASC,IAAT,EAAeC,cAAf,QAAqC,QAArC;;AAEA,SAASC,KAAT,GAAiB;AACb,QAAMC,KAAK,GAAGH,IAAI,CAAC;AACfI,IAAAA,GAAG,EAAE,MADU;AAEfC,IAAAA,OAAO,EAAE;AAFM,GAAD,CAAlB;;AAKA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC5B,UAAM;AAAEC,MAAAA,MAAM,EAAG;AAACC,QAAAA;AAAD;AAAX,QAAuBF,CAA7B;AACI,UAAMG,OAAO,GAAGD,KAAK,CAAC,CAAD,CAArB;AACA,UAAME,MAAM,GAAG,IAAIC,UAAJ,EAAf,CAHwB,CAGS;;AACjCD,IAAAA,MAAM,CAACE,aAAP,CAAqBH,OAArB,EAJwB,CAIO;;AAC/BC,IAAAA,MAAM,CAACG,SAAP,GAAoBC,aAAD,IAAkB;AAAE;AACnC,YAAM;AAAEC,QAAAA,aAAa,EAAE;AAAEC,UAAAA;AAAF;AAAjB,UAAgCF,aAAtC;AACAG,MAAAA,YAAY,CAAEC,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAe;AAACC,QAAAA,GAAG,EAAEH,MAAN;AAAeI,QAAAA,EAAE,EAAEF,SAAS,CAACG,MAA7B;AAAqCZ,QAAAA;AAArC,OAAf,CAAhB,CAAZ;AACH,KAHD;AAIH,GATD;;AAWA,QAAMa,WAAW,GAAG,MAAM;AACtBL,IAAAA,YAAY,CAACC,SAAS,CAACK,MAAV,CAAiBL,SAAS,IAAIA,SAAS,CAACE,EAAV,KAAiBF,SAAS,CAACE,EAAzD,CAAD,CAAZ;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI,QAAC,SAAD;AAAW,MAAA,EAAE,EAAEA,EAAf;AAAmB,MAAA,GAAG,EAAED,GAAxB;AAAA,gBACSD,SAAS,CAACM,GAAV,CAAeC,KAAD,IAAW;AACtB,4BACI;AAAM,UAAA,SAAS,EAAC,QAAhB;AAAyB,UAAA,OAAO,EAAE,MAAMH,WAAW,CAACJ,SAAS,CAACE,EAAX,CAAnD;AAAA,oBAAqE,GAAEK,KAAK,CAACL,EAAG,MAAKK,KAAK,CAAChB,OAAN,CAAciB,IAAK;AAAxG;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGH,OAJA;AADT;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI,QAAC,IAAD;AAAM,MAAA,WAAW,EAAEJ,WAAnB;AAAgC,MAAA,SAAS,EAAEJ;AAA3C;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;KAjCQjB,K;AAmCT,eAAeA,KAAf","sourcesContent":["import React from ' react';\nimport { atom, useRecoilState } from 'recoil';\n\nfunction Array() {\n    const state = atom({\n        key: 'grid',\n        default: [],\n    });\n\n    const onFileChange = (e) => {\n    const { target : {files} } = e;\n        const theFile = files[0];\n        const reader = new FileReader(); //객체를 이용해 컴퓨터에 저장하는 것을 가능하게\n        reader.readAsDataURL(theFile); //읽을 객체\n        reader.onloadend = (finishedEvent) =>{ //읽기 동작이 성공적으로 완료 되었을 때 발생\n            const { currentTarget: { result } } = finishedEvent;\n            setImageList((imageList) => [...imageList, {src: result , id: imageList.length, theFile}]);\n        }\n    }\n    \n    const removeItems = () => {\n        setImageList(imageList.filter(imageList => imageList.id !== imageList.id));\n    }\n\n    return (\n        <div>\n            <InsideBox id={id} src={src}>\n                    {imageList.map((image) => {\n                        return (\n                            <span className=\"arrNum\" onClick={() => removeItems(imageList.id)}>{`${image.id} - ${image.theFile.name}`}</span>\n                        );\n                    })}\n                </InsideBox>\n            <List removeItems={removeItems} imageList={imageList}/>\n        </div>\n    );\n}\n\nexport default Array;"]},"metadata":{},"sourceType":"module"}