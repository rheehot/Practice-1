{"ast":null,"code":"// import React from ' react';\n// import { atom, useRecoilState } from 'recoil';\n// function Array() {\n//     const state = atom({\n//         key: 'grid',\n//         default: [],\n//     });\n//     const onFileChange = (e) => {\n//     const { target : {files} } = e;\n//         const theFile = files[0];\n//         const reader = new FileReader(); //객체를 이용해 컴퓨터에 저장하는 것을 가능하게\n//         reader.readAsDataURL(theFile); //읽을 객체\n//         reader.onloadend = (finishedEvent) =>{ //읽기 동작이 성공적으로 완료 되었을 때 발생\n//             const { currentTarget: { result } } = finishedEvent;\n//             setImageList((imageList) => [...imageList, {src: result , id: imageList.length, theFile}]);\n//         }\n//     }\n//     const removeItems = () => {\n//         setImageList(imageList.filter(imageList => imageList.id !== imageList.id));\n//     }\n//     return (\n//         <div>\n//             <InsideBox id={id} src={src}>\n//                     {imageList.map((image) => {\n//                         return (\n//                             <span className=\"arrNum\" onClick={() => removeItems(imageList.id)}>{`${image.id} - ${image.theFile.name}`}</span>\n//                         );\n//                     })}\n//                 </InsideBox>\n//             <List removeItems={removeItems} imageList={imageList}/>\n//         </div>\n//     );\n// }\n// export default Array;","map":{"version":3,"sources":["/Users/zulie/Desktop/zulie/practice/practice/src/pages/Array.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React from ' react';\n// import { atom, useRecoilState } from 'recoil';\n\n// function Array() {\n//     const state = atom({\n//         key: 'grid',\n//         default: [],\n//     });\n\n//     const onFileChange = (e) => {\n//     const { target : {files} } = e;\n//         const theFile = files[0];\n//         const reader = new FileReader(); //객체를 이용해 컴퓨터에 저장하는 것을 가능하게\n//         reader.readAsDataURL(theFile); //읽을 객체\n//         reader.onloadend = (finishedEvent) =>{ //읽기 동작이 성공적으로 완료 되었을 때 발생\n//             const { currentTarget: { result } } = finishedEvent;\n//             setImageList((imageList) => [...imageList, {src: result , id: imageList.length, theFile}]);\n//         }\n//     }\n    \n//     const removeItems = () => {\n//         setImageList(imageList.filter(imageList => imageList.id !== imageList.id));\n//     }\n\n//     return (\n//         <div>\n//             <InsideBox id={id} src={src}>\n//                     {imageList.map((image) => {\n//                         return (\n//                             <span className=\"arrNum\" onClick={() => removeItems(imageList.id)}>{`${image.id} - ${image.theFile.name}`}</span>\n//                         );\n//                     })}\n//                 </InsideBox>\n//             <List removeItems={removeItems} imageList={imageList}/>\n//         </div>\n//     );\n// }\n\n// export default Array;"]},"metadata":{},"sourceType":"module"}