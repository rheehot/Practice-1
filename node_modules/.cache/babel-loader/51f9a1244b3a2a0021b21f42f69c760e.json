{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/zulie/Desktop/zulie/practice/practice/src/pages/Grid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Array from \"./Array\";\nimport { atom, useRecoilState } from 'recoil';\nconst Wrapper = styled.section`\n    width: 100%;\n    max-width: 1680px;\n\n    .button {\n    margin: 50px 70px;\n    display: none;\n    }\n`;\n_c = Wrapper;\nconst List = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    row-gap: 10px;\n\n    .productContent {\n    display: flex;\n    justify-content: center;\n    }\n    .product {\n    width: 400px;\n    height: 400px;\n    margin: 10px;\n    }\n`;\n_c2 = List;\nconst OutsideBox = styled.div`\n    display: flex;\n    justify-content: center;\n    border: 2px solid #dfdfdf;\n    border-radius: 10px;\n    margin: 40px 70px 10px;\n    overflow: scroll;\n`;\n_c3 = OutsideBox;\nconst InsideBox = styled.div`\n    border: 1px solid #dfdfdf;\n    padding: 5px 0;\n    display: flex;\n`;\n_c4 = InsideBox;\nconst Button = styled.div`\n    margin: 30px 70px;\n    font-size: 12px;\n\n    .input-file-button {\n    padding: 6px 25px;\n    background-color: #0358ff;\n    border-radius: 4px;\n    color: white;\n\n    &:hover {\n        cursor: pointer;\n    }\n    }\n`;\n_c5 = Button;\n\nconst Grid = (id, src) => {\n  _s();\n\n  const state = atom({\n    key: 'grid',\n    default: []\n  });\n  const [imageList, setImageList] = useRecoilState(state);\n\n  const onFileChange = e => {\n    const {\n      target: {\n        files\n      }\n    } = e;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.readAsDataURL(theFile);\n\n    reader.onloadend = finishedEvent => {\n      const {\n        currentTarget: {\n          result\n        }\n      } = finishedEvent;\n      setImageList(imageList => [...imageList, {\n        src: result,\n        id: imageList.length,\n        theFile\n      }]);\n    };\n  };\n\n  const removeItems = id => {\n    console.log(id);\n    setImageList(imageList.filter(imageList => imageList.id !== id));\n  };\n\n  console.log(imageList);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(OutsideBox, {\n      children: /*#__PURE__*/_jsxDEV(InsideBox, {\n        id: id,\n        src: src,\n        children: imageList.map(image => {\n          return /*#__PURE__*/_jsxDEV(Array, {\n            id: image.id,\n            removeItems: removeItems,\n            image: image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-file-button\",\n        for: \"input-file\",\n        children: \"\\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"button\",\n        id: \"input-file\",\n        type: \"file\",\n        onChange: onFileChange,\n        multiple: \"multiple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: imageList.map(image => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"productContent\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"product\",\n            src: image.src\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Grid, \"CMDnigB18yOXQvnM8mxKEJRk/sw=\", false, function () {\n  return [useRecoilState];\n});\n\n_c6 = Grid;\nexport default Grid;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"List\");\n$RefreshReg$(_c3, \"OutsideBox\");\n$RefreshReg$(_c4, \"InsideBox\");\n$RefreshReg$(_c5, \"Button\");\n$RefreshReg$(_c6, \"Grid\");","map":{"version":3,"sources":["/Users/zulie/Desktop/zulie/practice/practice/src/pages/Grid.js"],"names":["React","useEffect","useState","styled","Array","atom","useRecoilState","Wrapper","section","List","div","OutsideBox","InsideBox","Button","Grid","id","src","state","key","default","imageList","setImageList","onFileChange","e","target","files","theFile","reader","FileReader","readAsDataURL","onloadend","finishedEvent","currentTarget","result","length","removeItems","console","log","filter","map","image"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Array from \"./Array\";\nimport { atom, useRecoilState } from 'recoil';\n\nconst Wrapper = styled.section`\n    width: 100%;\n    max-width: 1680px;\n\n    .button {\n    margin: 50px 70px;\n    display: none;\n    }\n`;\n\nconst List = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    row-gap: 10px;\n\n    .productContent {\n    display: flex;\n    justify-content: center;\n    }\n    .product {\n    width: 400px;\n    height: 400px;\n    margin: 10px;\n    }\n`;\n\nconst OutsideBox = styled.div`\n    display: flex;\n    justify-content: center;\n    border: 2px solid #dfdfdf;\n    border-radius: 10px;\n    margin: 40px 70px 10px;\n    overflow: scroll;\n`;\n\nconst InsideBox = styled.div`\n    border: 1px solid #dfdfdf;\n    padding: 5px 0;\n    display: flex;\n`;\n\nconst Button = styled.div`\n    margin: 30px 70px;\n    font-size: 12px;\n\n    .input-file-button {\n    padding: 6px 25px;\n    background-color: #0358ff;\n    border-radius: 4px;\n    color: white;\n\n    &:hover {\n        cursor: pointer;\n    }\n    }\n`;\n\nconst Grid = (id, src) => {\n\n    const state = atom({\n        key: 'grid',\n        default: [],\n    });\n    const [imageList, setImageList] = useRecoilState(state);\n\n    const onFileChange = (e) => {\n    const { target: { files }} = e;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.readAsDataURL(theFile);\n    reader.onloadend = (finishedEvent) => {\n        const { currentTarget: { result }} = finishedEvent;\n        setImageList((imageList) => [...imageList, { src: result, id: imageList.length, theFile }]);\n    };\n    };\n\n    const removeItems = (id) => {\n    console.log(id);\n    setImageList(imageList.filter((imageList) => imageList.id !== id));\n    };\n\n    console.log(imageList);\n    return (\n    <Wrapper>\n        <OutsideBox>\n        <InsideBox id={id} src={src}>\n            {imageList.map((image) => {\n            return <Array id={image.id} removeItems={removeItems} image={image} />;\n            })}\n        </InsideBox>\n        </OutsideBox>\n        <Button>\n        <label className=\"input-file-button\" for=\"input-file\">\n            업로드\n        </label>\n        <input className=\"button\" id=\"input-file\" type=\"file\" onChange={onFileChange} multiple=\"multiple\" />\n        </Button>\n        <List>\n        {imageList.map((image) => {\n            return (\n            <div className=\"productContent\">\n                <img className=\"product\" src={image.src} />\n            </div>\n            );\n        })}\n        </List>\n    </Wrapper>\n    );\n};\n\nexport default Grid;\n\n"]},"metadata":{},"sourceType":"module"}