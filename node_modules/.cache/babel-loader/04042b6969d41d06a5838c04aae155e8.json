{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/zulie/Desktop/zulie/practice/practice/src/pages/Grid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { atom, useRecoilState } from 'recoil';\nconst Wrapper = styled.section`\n    width: 100%;\n    max-width: 1680px;\n    .button {\n        margin-top: 50px;\n    }\n`;\n_c = Wrapper;\nconst List = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    \n    .product {\n        width:300px;\n        height: 300px;\n        margin: 10px;\n    }\n`;\n_c2 = List;\nconst OutsideBox = styled.div`\n    border: 2px solid #dfdfdf;\n`;\n_c3 = OutsideBox;\nconst InsideBox = styled.div`\n    border: 1px solid #dfdfdf;\n`;\n_c4 = InsideBox;\nconst state = atom({\n  key: 'grid',\n  default: []\n});\n\nconst Grid = () => {\n  _s();\n\n  const [imageList, setImageList] = useRecoilState(state);\n  const [arrayNum, setArrayNum] = useState(0);\n  useEffect(() => {\n    setArrayNum(arrayNum + 1);\n  }, [imageList]);\n\n  const onFileChange = e => {\n    const {\n      target: {\n        files\n      }\n    } = e;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.readAsDataURL(theFile);\n\n    reader.onloadend = finishedEvent => {\n      const {\n        currentTarget: {\n          result\n        }\n      } = finishedEvent;\n      setImageList(imageList => [...imageList, result]);\n    };\n  };\n\n  const newNum = [arrayNum];\n  console.log(newNum);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(OutsideBox, {\n      children: /*#__PURE__*/_jsxDEV(InsideBox, {\n        children: newNum.map((num, idx) => {\n          return idx;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"button\",\n        type: \"file\",\n        onChange: onFileChange,\n        multiple: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: imageList.map((image, idx) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [idx + 1, /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"product\",\n              src: image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Grid, \"lyoGYnbdlMKklnFfb3A4gRpvMZs=\", false, function () {\n  return [useRecoilState];\n});\n\n_c5 = Grid;\nexport default Grid;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"List\");\n$RefreshReg$(_c3, \"OutsideBox\");\n$RefreshReg$(_c4, \"InsideBox\");\n$RefreshReg$(_c5, \"Grid\");","map":{"version":3,"sources":["/Users/zulie/Desktop/zulie/practice/practice/src/pages/Grid.js"],"names":["React","useEffect","useState","styled","atom","useRecoilState","Wrapper","section","List","div","OutsideBox","InsideBox","state","key","default","Grid","imageList","setImageList","arrayNum","setArrayNum","onFileChange","e","target","files","theFile","reader","FileReader","readAsDataURL","onloadend","finishedEvent","currentTarget","result","newNum","console","log","map","num","idx","image"],"mappings":"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","sourcesContent":["import React ,{ useEffect, useState} from 'react';\nimport styled from 'styled-components';\nimport { atom, useRecoilState } from 'recoil';\n\n\nconst Wrapper = styled.section`\n    width: 100%;\n    max-width: 1680px;\n    .button {\n        margin-top: 50px;\n    }\n`;\n\n\nconst List = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    \n    .product {\n        width:300px;\n        height: 300px;\n        margin: 10px;\n    }\n`;\n\nconst OutsideBox = styled.div`\n    border: 2px solid #dfdfdf;\n`;\n\nconst InsideBox = styled.div`\n    border: 1px solid #dfdfdf;\n`;\n\nconst state = atom({\n    key: 'grid',\n    default: [],\n});\n\nconst Grid = () => {\n\n    const [imageList, setImageList] = useRecoilState(state);\n    const [arrayNum, setArrayNum] = useState(0);\n\n    useEffect(() => {\n        setArrayNum(arrayNum+1);\n    },[imageList])\n\n\n    const onFileChange = (e) => {\n    const { target : {files} } = e;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.readAsDataURL(theFile);\n        reader.onloadend = (finishedEvent) =>{\n            const {currentTarget : { result }} = finishedEvent;\n            setImageList((imageList)=>[...imageList, result]);\n        }\n    }\n    const newNum = [arrayNum]\n    console.log(newNum)\n        \n    return(\n        <Wrapper>\n            <OutsideBox>\n                <InsideBox>\n                    {newNum.map((num,idx) => {\n                        return (idx);\n                    }) }\n                </InsideBox>\n            </OutsideBox>\n                <div>\n                    <input className='button' type='file' onChange={onFileChange} multiple/> \n                </div>\n                <List> \n                {imageList.map((image, idx) => {\n                    return (\n                        <>\n                            <div>{idx+1}\n                            <img className='product' src={image} /></div>\n                        </>\n                    );\n                })}\n                </List>\n            </Wrapper>\n    );\n};\n\nexport default Grid;  "]},"metadata":{},"sourceType":"module"}