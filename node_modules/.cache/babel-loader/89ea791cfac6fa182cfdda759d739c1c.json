{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/zulie/Desktop/zulie/practice/practice/src/pages/Grid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { atom, useRecoilState } from 'recoil';\nconst Wrapper = styled.section`\n    width: 100%;\n    .button {\n        margin-top: 50px;\n    }\n`;\n_c = Wrapper;\nconst Img = styled.div`\n    display: grid;\n    grid-template-rows: repeat(3, 1fr); \n    padding: 10px;\n`;\n_c2 = Img;\nconst state = atom({\n  key: 'grid',\n  default: []\n});\n\nconst Grid = () => {\n  _s();\n\n  const [imageList, setImageList] = useRecoilState(state);\n\n  const onFileChange = e => {\n    const {\n      target: {\n        files\n      }\n    } = e;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.readAsDataURL(theFile);\n\n    reader.onloadend = finishedEvent => {\n      const {\n        currentTarget: {\n          result\n        }\n      } = finishedEvent;\n      setImageList(image => [...image, result]);\n    };\n  };\n\n  const addImage = e => [...image];\n\n  console.log(image);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"button\",\n        type: \"file\",\n        onChange: onFileChange,\n        multiple: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: addImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Img, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image[0],\n        alt: \"img\",\n        width: '300px',\n        height: '300px'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Grid, \"CMDnigB18yOXQvnM8mxKEJRk/sw=\", false, function () {\n  return [useRecoilState];\n});\n\n_c3 = Grid;\nexport default Grid;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Img\");\n$RefreshReg$(_c3, \"Grid\");","map":{"version":3,"sources":["/Users/zulie/Desktop/zulie/practice/practice/src/pages/Grid.js"],"names":["React","useState","styled","atom","useRecoilState","Wrapper","section","Img","div","state","key","default","Grid","imageList","setImageList","onFileChange","e","target","files","theFile","reader","FileReader","readAsDataURL","onloadend","finishedEvent","currentTarget","result","image","addImage","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,EAAeC,cAAf,QAAqC,QAArC;AAGA,MAAMC,OAAO,GAAGH,MAAM,CAACI,OAAQ;AAC/B;AACA;AACA;AACA;AACA,CALA;KAAMD,O;AAON,MAAME,GAAG,GAAGL,MAAM,CAACM,GAAI;AACvB;AACA;AACA;AACA,CAJA;MAAMD,G;AAMN,MAAME,KAAK,GAAGN,IAAI,CAAC;AACfO,EAAAA,GAAG,EAAE,MADU;AAEfC,EAAAA,OAAO,EAAE;AAFM,CAAD,CAAlB;;AAKA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEf,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,cAAc,CAACK,KAAD,CAAhD;;AAEA,QAAMM,YAAY,GAAIC,CAAD,IAAO;AAC5B,UAAM;AAAEC,MAAAA,MAAM,EAAG;AAACC,QAAAA;AAAD;AAAX,QAAuBF,CAA7B;AACI,UAAMG,OAAO,GAAGD,KAAK,CAAC,CAAD,CAArB;AACA,UAAME,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,IAAAA,MAAM,CAACE,aAAP,CAAqBH,OAArB;;AACAC,IAAAA,MAAM,CAACG,SAAP,GAAoBC,aAAD,IAAkB;AACjC,YAAM;AAACC,QAAAA,aAAa,EAAG;AAAEC,UAAAA;AAAF;AAAjB,UAA+BF,aAArC;AACAV,MAAAA,YAAY,CAAEa,KAAD,IAAS,CAAC,GAAGA,KAAJ,EAAWD,MAAX,CAAV,CAAZ;AACH,KAHD;AAIH,GATD;;AAWA,QAAME,QAAQ,GAAIZ,CAAD,IAAO,CAAC,GAAGW,KAAJ,CAAxB;;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAEA,sBACQ,QAAC,OAAD;AAAA,4BACI;AAAA,6BACI;AAAO,QAAA,SAAS,EAAC,QAAjB;AAA0B,QAAA,IAAI,EAAC,MAA/B;AAAsC,QAAA,QAAQ,EAAEZ,YAAhD;AAA8D,QAAA,QAAQ;AAAtE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAIQ;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEa;AAA7B;AAAA;AAAA;AAAA;AAAA,YAJR,eAKI,QAAC,GAAD;AAAA,6BACI;AAAK,QAAA,GAAG,EAAED,KAAK,CAAC,CAAD,CAAf;AAAoB,QAAA,GAAG,EAAC,KAAxB;AAA8B,QAAA,KAAK,EAAE,OAArC;AAA8C,QAAA,MAAM,EAAE;AAAtD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAYH,CA/BD;;GAAMf,I;UAEgCR,c;;;MAFhCQ,I;AAiCN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { atom, useRecoilState } from 'recoil';\n\n\nconst Wrapper = styled.section`\n    width: 100%;\n    .button {\n        margin-top: 50px;\n    }\n`;\n\nconst Img = styled.div`\n    display: grid;\n    grid-template-rows: repeat(3, 1fr); \n    padding: 10px;\n`;\n\nconst state = atom({\n    key: 'grid',\n    default: [],\n});\n\nconst Grid = () => {\n\n    const [imageList, setImageList] = useRecoilState(state);\n\n    const onFileChange = (e) => {\n    const { target : {files} } = e;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.readAsDataURL(theFile);\n        reader.onloadend = (finishedEvent) =>{\n            const {currentTarget : { result }} = finishedEvent;\n            setImageList((image)=>[...image, result]);\n        }\n    }\n\n    const addImage = (e) => [...image];\n\n    console.log(image)\n\n    return(\n            <Wrapper>\n                <div>\n                    <input className='button' type='file' onChange={onFileChange} multiple/> \n                </div>\n                    <input type='file' onChange={addImage} />\n                <Img> \n                    <img src={image[0]} alt='img' width={'300px'} height={'300px'} />\n                \n                </Img>\n            </Wrapper>\n    );\n};\n\nexport default Grid;  "]},"metadata":{},"sourceType":"module"}